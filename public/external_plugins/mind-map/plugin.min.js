import { ref, onMounted } from "vue";
import MindMap from "simple-mind-map";
import markdown from "simple-mind-map/src/parse/markdown.js";
import MiniMap from "simple-mind-map/src/plugins/MiniMap.js";
import Watermark from "simple-mind-map/src/plugins/Watermark.js";
import KeyboardNavigation from "simple-mind-map/src/plugins/KeyboardNavigation.js";
import ExportPDF from "simple-mind-map/src/plugins/ExportPDF.js";
import ExportXMind from "simple-mind-map/src/plugins/ExportXMind.js";
import Export from "simple-mind-map/src/plugins/Export.js";
import Drag from "simple-mind-map/src/plugins/Drag.js";
import Select from "simple-mind-map/src/plugins/Select.js";
import RichText from "simple-mind-map/src/plugins/RichText.js";
import AssociativeLine from "simple-mind-map/src/plugins/AssociativeLine.js";
import TouchEvent from "simple-mind-map/src/plugins/TouchEvent.js";
import NodeImgAdjust from "simple-mind-map/src/plugins/NodeImgAdjust.js";
import SearchPlugin from "simple-mind-map/src/plugins/Search.js";
import Painter from "simple-mind-map/src/plugins/Painter.js";
import ScrollbarPlugin from "simple-mind-map/src/plugins/Scrollbar.js";
import Formula from "simple-mind-map/src/plugins/Formula.js";
import Cooperate from "simple-mind-map/src/plugins/Cooperate.js";
import { convertHtmlToMarkdown } from "dom-to-semantic-markdown";
import domtoimage from "dom-to-image";

MindMap.usePlugin(MiniMap)
  .usePlugin(Watermark)
  .usePlugin(Drag)
  .usePlugin(KeyboardNavigation)
  .usePlugin(ExportPDF)
  .usePlugin(ExportXMind)
  .usePlugin(Export)
  .usePlugin(Select)
  .usePlugin(AssociativeLine)
  .usePlugin(NodeImgAdjust)
  .usePlugin(TouchEvent)
  .usePlugin(SearchPlugin)
  .usePlugin(Painter)
  .usePlugin(Formula);

const mindMapContainerRef = ref(null);
let mindMap = null;
const mindData = {
  data: {
    text: "Root Node",
  },
  children: [],
};

async function init() {
  mindMap = new MindMap({
    el: mindMapContainerRef.value,
    data: mindData,
  });
}

onMounted(async () => {
  init();
});

(function () {
  tinymce.PluginManager.add("mindmap_plugin", function (editor, url) {
    editor.ui.registry.addButton("mindmap", {
      // text: '生成思维导图',
      icon: "mind-map",
      onAction: function () {
        const selectedText = editor.selection.getContent();

        if (!selectedText) {
          editor.windowManager.alert("请先选中一段文字！");
          return;
        }

        const mindMapData = {
          data: {
            text: `测试数据`,
          },
          children: [
            {
              data: {
                text: "html",
              },
              children: [
                {
                  data: {
                    text: selectedText,
                  },
                },
              ],
            },
            {
              data: {
                text: "time",
              },
              children: [
                {
                  data: {
                    text: new Date().toLocaleString(),
                  },
                },
              ],
            },
          ],
        };

        const mindMapContainerId = "mindmap-container";
        const mindMapContainer = `<div id="${mindMapContainerId}" style=" height: 400px;"></div>`;

        editor.windowManager.open({
          title: "思维导图",
          body: {
            type: "panel",
            items: [
              {
                type: "htmlpanel",
                html: mindMapContainer,
              },
            ],
          },
          buttons: [
            {
              type: "submit",
              text: "下载",
              subtype: "primary",
              onclick: "submit",
            },
            {
              type: "cancel",
              text: "取消",
              onclick: "close",
            },
          ],
          //   onOpen: function () {
          //     const mindMapContainerElement =
          //       document.getElementById(mindMapContainerId);
          //     const mindMapInstance = new MindMap({
          //       el: mindMapContainerElement,
          //       data: mindMapData,
          //     });
          //   },
          onSubmit: () => {
            const mindMapContainerElement =
              document.getElementById(mindMapContainerId);
            domtoimage
              .toJpeg(mindMapContainerElement, { quality: 0.95 })
              .then(function (dataUrl) {
                var link = document.createElement("a");
                link.download = "mind-map.jpeg";
                link.href = dataUrl;
                link.click();
                // editor.insertContent(`${selectedText}<img src="${dataUrl}" />`);
                // editor.windowManager.close();
              });
          },
        });

        const newSelectedText = new String(selectedText)
          .replace(/<div/g, "<h6")
          .replace(/<\/div>/g, "</h6>")
          .replace(/<p/g, "<h6")
          .replace(/<\/p>/g, "</h6>")
          .replace(/<h5/g, "<h6")
          .replace(/<\/h5>/g, "</h6>")
          .replace(/<h4/g, "<h5")
          .replace(/<\/h4>/g, "</h5>")
          .replace(/<h3/g, "<h4")
          .replace(/<\/h3>/g, "</h4>")
          .replace(/<h2/g, "<h3")
          .replace(/<\/h2>/g, "</h3>")
          .replace(/<h1/g, "<h2")
          .replace(/<\/h1>/g, "</h2>");

        const mindMapContainerElement =
          document.getElementById(mindMapContainerId);
        const mindMapInstance = new MindMap({
          el: mindMapContainerElement,
          data: {},
        });
        mindMapInstance.setData(
          markdown.transformMarkdownTo(
            `# /\n\n` + convertHtmlToMarkdown(newSelectedText)
          )
        );
        // const imgData = mindMapInstance.exportImage(); // 假设这是自定义方法
        // editor.insertContent(`<img src="${imgData}" />`);
        // editor.windowManager.close();
      },
    });
  });
})();
